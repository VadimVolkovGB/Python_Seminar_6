# Даны два массива чисел. Требуется вывести те элементы
# первого массива (в том порядке, в каком они идут в первом
# массиве), которых нет во втором массиве. Пользователь вводит
# число N - количество элементов в первом массиве, затем N
# чисел - элементы массива. Затем число M - количество
# элементов во втором массиве. Затем элементы второго массива

# import random
# n = int(input('Введите количество элементов '))
# a = []
# count = 0
# for i in range(n):
#     a.append(random.randint(1, 10))
# print(a)
# for i in range (1,n-1):
#     if a[i] > a[i-1] and a[i] > a[i+1]:
#         count +=1
#         print(f'Элемент {a[i]} на позиции {i+1}')
# print(f'Количество элементов: {count}')

# Дан массив, состоящий из целых чисел. Напишите
# программу, которая в данном массиве определит
# количество элементов, у которых два соседних и, при
# этом, оба соседних элемента меньше данного. Сначала
# вводится число N — количество элементов в массиве
# Далее записаны N чисел — элементы массива. Массив
# состоит из целых чисел.


# import random
# n = int(input('Введите количество элементов первой последовательности '))
# first = []
# count = 0
# for _ in range(n):
#     first.append(random.randint(1, 10))
#
# m = int(input('Введите количество элементов первой последовательности: '))
# second = []
# for _ in range(m):
#     second.append(random.randint(1, 10))
# print(first)
# print(second)
# for i in range(n):
#     if first[i] not in second:
#         print(first[i], end= " ")

# Дан список чисел. Посчитайте, сколько в нем пар
# элементов, равных друг другу. Считается, что любые
# два элемента, равные друг другу образуют одну пару,
# которую необходимо посчитать. Вводится список
# чисел. Все числа списка находятся на разных
# строках.



# Два различных натуральных числа n и m называются
# дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и
# наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных
# чисел, каждое из которых не превосходит k. Программа
# получает на вход одно натуральное число k, не
# превосходящее 105
# . Программа должна вывести все
# пары дружественных чисел, каждое из которых не
# превосходит k. Пары необходимо выводить по одной в
# строке, разделяя пробелами. Каждая пара должна быть
# выведена только один раз (перестановка чисел новую
# пару не дает).

# n = 300
# list1 = []
# for i in range(1, n+1):
#     summ=0
#     for j in range(1, i//2+1):
#         if i%j==0:
#             summ += j
#     list1.append(tuple([i,summ]))
# print(list1)
# for i in range(len(list1)):
#     for j in range(i, len(list1)):
#         if i != j and list1[i][0] == list1[j][1] and list1[i][1] == list1[j][0]:
#             print(*list1[i])


### Задача 30:  Заполните массив элементами арифметической прогрессии.
# Её первый элемент, разность и количество элементов нужно ввести с клавиатуры.
# Формула для получения n-го члена прогрессии: an = a1 + (n-1) * d.
# Каждое число вводится с новой строки.



# num= int(input("Введите значение 1-го элемента: "))
# d=int(input("Введите разность элементов: "))
# n=int(input("Введите количество элементов: "))
# res = [num + (i - 1) * d for i in range(1, n + 1)]
# print(*res)

# Задача 32: Определить индексы элементов массива (списка), значения которых принадлежат заданному диапазону (т.е. не меньше заданного минимума и не больше заданного максимума)
# list_1 = [-5, 9, 0, 3, -1, -2, 1, 4, -2, 10, 2, 0, -9, 8, 10, -9, 0, -5, -5, 7]
# list_2 = []
# max = 10
# min = 6
# for i in range(len(list_1)):
#     if list_1[i] >= min and list_1[i] <= max:
#         list_2.append(i)
# print(list_2)
